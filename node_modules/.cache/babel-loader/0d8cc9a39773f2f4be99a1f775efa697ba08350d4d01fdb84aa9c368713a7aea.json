{"ast":null,"code":"var _jsxFileName = \"/home/eva/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/reg/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport BoardComponent from './components/BoardComponent';\nimport { Board } from './models/Board';\nimport { Colors } from './models/Colors';\nimport { Player } from './models/Player';\nimport DebutsMake from './components/DebutsMake';\nimport DebutsPlay from './components/DebutsPlay';\nimport { Modes } from './models/Modes';\nimport { Mod } from './models/Mod';\nimport { sendPostRequest } from './models/bek';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080';\nconst App = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginDirty, setLoginDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [loginError, setLoginError] = useState('Логин не может быть пустым');\n  const [passwordError, setPasswordError] = useState('Пароль не может быть пустым');\n  const [formValid, setFormValid] = useState(false);\n  const [userDirty, setUserDirty] = useState(false);\n  const [userError, setUserError] = useState('Пользователь с таким именем уже есть');\n  useEffect(() => {\n    if (loginError || passwordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [loginError, passwordError]);\n  const loginHandler = e => {\n    setLogin(e.target.value);\n    if (e.target.value.length < 3 || e.target.value.length > 20) {\n      setLoginError('Логин должен быть от 3 до 20 символов');\n      if (!e.target.value) {\n        setLoginError('Логин не может быть пустым');\n      }\n    } else {\n      setLoginError('');\n    }\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    if (e.target.value.length < 3 || e.target.value.length > 8) {\n      setPasswordError('Пароль должен быть от 3 до 8 символов');\n      if (!e.target.value) {\n        setPasswordError('Пароль не может быть пустым');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n  const blurHeader = e => {\n    switch (e.target.name) {\n      case 'login':\n        setLoginDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n    }\n  };\n  const [user, setUser] = useState(false);\n  /*\n    async function registrations(): Promise<void> {\n      const HashPassword: string = password;\n  \n      try {\n          const id = await sendLoginRequest(login, HashPassword);\n          \n          // Проверка, является ли id единицей\n          if (id === 0) {\n            setUser(false);\n          } else {\n            setUser(true)\n          }\n      } catch (error) {\n          console.error('Error during login or ID check:', error);\n      }\n  }\n  \n  */\n  const registrations = () => {\n    // тут если\n    const HashPassword = password;\n    const id = sendPostRequest(login, HashPassword);\n    console.log('yyyyyy', id);\n    if (id === 0) {\n      setUser(false);\n    } else {\n      setUser(true);\n    }\n\n    //setUser(true)\n  };\n  const entrance = () => {\n    const HashPassword = password;\n    //\n    setUser(true);\n  };\n  const [mod, setMod] = useState(new Mod(Modes.NULL, null)); //состояние в котором сейчас игра\n  let boards = [];\n  let boards1 = [];\n  const [board, setBoard] = useState(new Board()); //[состояние, функция, которая будет изменять состояние] = хук, которым инициализируем состояние\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  useEffect(() => {\n    // чтобы метод вызывался при старте\n    restart();\n\n    //clickUp(mod);\n  }, [DebutsMake]);\n  function swapPlayer() {\n    setCurrentPlayer((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE ? blackPlayer : whitePlayer);\n  }\n  function restart() {\n    // начинаем новую партию игры\n    const newBoard = new Board();\n    newBoard.initCells(); //метод инициализации ячеек\n    newBoard.addFigures(); // раставить фигуры\n    setCurrentPlayer(whitePlayer);\n    //newBoard.currentPlayer = Colors.WHITE\n    //newBoard.addDebuts()\n\n    let boardSTR = \"\";\n    boardSTR = newBoard.boardToString();\n    if ((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE) {\n      boardSTR += \"w\";\n    } else {\n      boardSTR += \"b\";\n    }\n    //console.log({boardSTR})\n    newBoard.BoardsStr.push(boardSTR);\n    setBoard(newBoard); // сохраняем новый объект в состоянии\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [loginDirty && loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        onChange: e => loginHandler(e),\n        value: login,\n        onBlur: e => blurHeader(e),\n        name: \"login\",\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        onChange: e => passwordHandler(e),\n        value: password,\n        onBlur: e => blurHeader(e),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt\",\n        onClick: () => registrations(),\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt\",\n        onClick: () => entrance(),\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(BoardComponent //сюда пропсы нада передать\n      // swapPlayer={swapPlayer}\n      , {\n        board: board,\n        setBoard: setBoard,\n        currentPlayer: currentPlayer,\n        swapPlayer: swapPlayer,\n        mod: mod,\n        boards: boards1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"debuts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Играть\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), board.Debuts.map(debut =>\n          /*#__PURE__*/\n          //{(mod.debut === debut) ? () : ()}\n          _jsxDEV(DebutsPlay, {\n            debut: debut,\n            restart: restart,\n            mod: mod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DebutsMake, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0432\\u0430\\u0442\\u044C\",\n          debuts: board.Debuts,\n          board: board,\n          restart: restart,\n          mod: mod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2/g3AbHZlu3AIPE92Xu6c+k5hGw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BoardComponent","Board","Colors","Player","DebutsMake","DebutsPlay","Modes","Mod","sendPostRequest","jsxDEV","_jsxDEV","API_URL","App","_s","login","setLogin","password","setPassword","loginDirty","setLoginDirty","passwordDirty","setPasswordDirty","loginError","setLoginError","passwordError","setPasswordError","formValid","setFormValid","userDirty","setUserDirty","userError","setUserError","loginHandler","e","target","value","length","passwordHandler","blurHeader","name","user","setUser","registrations","HashPassword","id","console","log","entrance","mod","setMod","NULL","boards","boards1","board","setBoard","whitePlayer","setWhitePlayer","WHITE","blackPlayer","setBlackPlayer","BLACK","currentPlayer","setCurrentPlayer","restart","swapPlayer","color","newBoard","initCells","addFigures","boardSTR","boardToString","BoardsStr","push","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","placeholder","onClick","disabled","Debuts","map","debut","title","debuts","_c","$RefreshReg$"],"sources":["/home/eva/Рабочий стол/reg/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport axios from 'axios';\nimport { useMutation } from 'react-query';\nimport BoardComponent from './components/BoardComponent';\nimport { Board } from './models/Board';\nimport { Colors } from './models/Colors';\nimport { Player } from './models/Player';\nimport DebutsMake from './components/DebutsMake';\nimport DebutsPlay from './components/DebutsPlay';\nimport { Modes } from './models/Modes';\nimport { Mod } from './models/Mod';\nimport { sendPostRequest } from './models/bek';\n\nconst API_URL = 'http://localhost:8080'\n\n\n\nconst App = () => {\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginDirty, setLoginDirty] = useState(false)\n  const [passwordDirty, setPasswordDirty] = useState(false)\n  const [loginError, setLoginError] = useState('Логин не может быть пустым')\n  const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\n  const [formValid, setFormValid] = useState(false)\n\n  const [userDirty, setUserDirty] = useState(false)\n  const [userError, setUserError] = useState('Пользователь с таким именем уже есть')\n\n  useEffect(() => {\n    if (loginError || passwordError) {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }, [loginError, passwordError])\n\n  const loginHandler = (e: any) => {\n    setLogin(e.target.value)\n    if(e.target.value.length < 3 || e.target.value.length > 20) {\n      setLoginError('Логин должен быть от 3 до 20 символов')\n      if(!e.target.value) {\n        setLoginError('Логин не может быть пустым')\n      }\n    } else {\n      setLoginError('')\n    }\n  }\n\n  const passwordHandler = (e: any) => {\n    setPassword(e.target.value)\n    if (e.target.value.length < 3 || e.target.value.length > 8) {\n      setPasswordError('Пароль должен быть от 3 до 8 символов')\n      if(!e.target.value) {\n        setPasswordError('Пароль не может быть пустым')\n      }\n    } else {\n      setPasswordError('')\n    }\n  }\n  \n  const blurHeader = (e: any) => {\n    switch (e.target.name) {\n      case 'login':\n        setLoginDirty(true)\n        break\n      case 'password':\n        setPasswordDirty(true)\n        break\n    }\n  }\n\n  const [user, setUser] = useState(false)\n/*\n  async function registrations(): Promise<void> {\n    const HashPassword: string = password;\n\n    try {\n        const id = await sendLoginRequest(login, HashPassword);\n        \n        // Проверка, является ли id единицей\n        if (id === 0) {\n          setUser(false);\n        } else {\n          setUser(true)\n        }\n    } catch (error) {\n        console.error('Error during login or ID check:', error);\n    }\n}\n\n*/\nconst registrations = () => {\n    // тут если\n    const HashPassword: string = password;\n  \n    const id = sendPostRequest(login, HashPassword);\n  \n\n    console.log('yyyyyy', id);\n\n    if (id === 0) {\n      setUser(false)\n    } else {\n      setUser(true)\n    }\n\n    //setUser(true)\n  }\n\n  const entrance = () => {\n    const HashPassword: string = password;\n    //\n    setUser(true)\n  }\n\n\n\n\n\n\n  const [mod, setMod] = useState(new Mod(Modes.NULL, null)) //состояние в котором сейчас игра\n  let boards: Board[] = [];\n  let boards1: string[] = [];\n\n  const [board, setBoard] = useState(new Board())   //[состояние, функция, которая будет изменять состояние] = хук, которым инициализируем состояние\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE))\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK))\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n\n  \n\n  useEffect(() => { // чтобы метод вызывался при старте\n    restart()\n    \n    //clickUp(mod);\n  }, [DebutsMake])\n\n  function swapPlayer() {\n    setCurrentPlayer((currentPlayer?.color === Colors.WHITE) ? blackPlayer : whitePlayer)\n  }\n\n  function restart() { // начинаем новую партию игры\n    const newBoard = new Board(); \n    newBoard.initCells() //метод инициализации ячеек\n    newBoard.addFigures() // раставить фигуры\n    setCurrentPlayer(whitePlayer);\n    //newBoard.currentPlayer = Colors.WHITE\n    //newBoard.addDebuts()\n    \n    \n    let boardSTR: string = \"\";\n    boardSTR = newBoard.boardToString();\n    if(currentPlayer?.color === Colors.WHITE) {boardSTR += \"w\"}\n    else {boardSTR += \"b\"}\n    //console.log({boardSTR})\n    newBoard.BoardsStr.push(boardSTR)\n    setBoard(newBoard) // сохраняем новый объект в состоянии\n  }\n\n\n\n\n  \n\n  return (\n    <div className=\"game\">\n      {!user ? (\n        \n        <form className='form'>\n\n        {(loginDirty && loginError) && <div style={{color:'red'}}>{loginError}</div>}\n        <input className='input' onChange={e => loginHandler(e)} value={login} onBlur={e => blurHeader(e)} name='login' type=\"text\" placeholder=\"Введите логин...\"/>\n        \n        {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\n        <input className='input' onChange={e => passwordHandler(e)} value={password} onBlur={e => blurHeader(e)} name='password' type=\"password\" placeholder=\"Введите пароль...\"/>\n        <p></p>\n        <button className='bt' onClick={() => registrations()} disabled={!formValid} type='submit'>Регистрация</button>\n        \n        <button className='bt' onClick={() => entrance()} disabled={!formValid} type='submit'>Вход</button>\n\n        {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\n      </form>\n\n      ) : (\n        <div className=\"app\">\n\n      <BoardComponent //сюда пропсы нада передать\n        // swapPlayer={swapPlayer}\n        board={board} \n        setBoard={setBoard}\n        currentPlayer={currentPlayer}\n        swapPlayer={swapPlayer}\n        mod={mod}\n        boards={boards1}\n      />\n\n      <p>\n            <p className = \"debuts\">\n                <h3>{\"Играть\"}</h3>\n                {board.Debuts.map(debut => \n                //{(mod.debut === debut) ? () : ()}\n                <DebutsPlay\n                debut={debut}   \n                restart={restart}\n                mod={mod}       \n              />\n                )}\n            </p>\n\n        <DebutsMake\n          title=\"Создавать\"\n          debuts={board.Debuts}\n          board={board}\n          restart={restart}\n          mod={mod}\n        />\n        \n      </p>\n\n    </div>\n\n      )}\n\n      \n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}