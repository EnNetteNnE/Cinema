{"ast":null,"code":"var _jsxFileName = \"/home/eva/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/reg/src/components/CellCompoForPlay.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CellComponentForPlay = ({\n  cell,\n  selected,\n  treehod,\n  click\n}) => {\n  var _cell$figure;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [cell.color].join(' ') // чтобы 2 класса объеденить в одну строку\n      //если ячейка выбрана то селектид, или пустая строка\n      ,\n      onClick: () => click(cell) // слушатель событий, вызываем функцию клик, и передаем туда ячейку\n      //style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '#0ce0e0' : ''}}\n      ,\n      children: [((_cell$figure = cell.figure) === null || _cell$figure === void 0 ? void 0 : _cell$figure.logo) && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cell.figure.logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)\n  // отрисовка классНейм аваэлибл только если нет фигуры\n  // если фигура на ячейке есть, то мы её отрисовываем\n  ;\n};\n\n//className={['cell', cell.color, treehod ? \"treehod\" : ''].join(' ')}\n//style={{border: cell.hodi ? '#0ce0e0' : ''}}\n//style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '4px #0ce0e0' : ''}}\n_c = CellComponentForPlay;\nexport default CellComponentForPlay;\nvar _c;\n$RefreshReg$(_c, \"CellComponentForPlay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CellComponentForPlay","cell","selected","treehod","click","_cell$figure","children","className","color","join","onClick","figure","logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eva/Рабочий стол/reg/src/components/CellCompoForPlay.tsx"],"sourcesContent":["import React, {FC, ReactNode} from 'react';\nimport {Cell} from \"../models/Cell\";\nimport { click } from '@testing-library/user-event/dist/click';\n\ninterface CellProps {\n  cell: Cell;\n  selected: boolean; // флаг выбрана ячейка или нет\n  treehod: boolean;\n  click: (cell: Cell) => void; // ожидаем функцию\n  //children?: ReactNode;\n}\n\nconst CellComponentForPlay: FC<CellProps> = ({cell, selected, treehod, click}) => {\n  return (  \n    <div>\n      <div \n      className={[cell.color].join(' ')} // чтобы 2 класса объеденить в одну строку\n      //если ячейка выбрана то селектид, или пустая строка\n      onClick={() => click(cell)} // слушатель событий, вызываем функцию клик, и передаем туда ячейку\n      //style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '#0ce0e0' : ''}}\n      > \n        {cell.figure?.logo && <img src={cell.figure.logo} alt=\"\"/>} \n        {<div  />}\n      </div>\n    </div> \n    // отрисовка классНейм аваэлибл только если нет фигуры\n    // если фигура на ячейке есть, то мы её отрисовываем\n    \n  );\n};\n\n\n//className={['cell', cell.color, treehod ? \"treehod\" : ''].join(' ')}\n//style={{border: cell.hodi ? '#0ce0e0' : ''}}\n//style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '4px #0ce0e0' : ''}}\n\nexport default CellComponentForPlay;"],"mappings":";AAAA,OAAOA,KAAK,MAAuB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY3C,MAAMC,oBAAmC,GAAGA,CAAC;EAACC,IAAI;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EAAA,IAAAC,YAAA;EAChF,oBACEN,OAAA;IAAAO,QAAA,eACEP,OAAA;MACAQ,SAAS,EAAE,CAACN,IAAI,CAACO,KAAK,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,CAAC;MACnC;MAAA;MACAC,OAAO,EAAEA,CAAA,KAAMN,KAAK,CAACH,IAAI,CAAE,CAAC;MAC5B;MAAA;MAAAK,QAAA,GAEG,EAAAD,YAAA,GAAAJ,IAAI,CAACU,MAAM,cAAAN,YAAA,uBAAXA,YAAA,CAAaO,IAAI,kBAAIb,OAAA;QAAKc,GAAG,EAAEZ,IAAI,CAACU,MAAM,CAACC,IAAK;QAACE,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzDnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;EACL;EACA;EAAA;AAGJ,CAAC;;AAGD;AACA;AACA;AAAAC,EAAA,GAtBMnB,oBAAmC;AAwBzC,eAAeA,oBAAoB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}