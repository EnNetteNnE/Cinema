{"ast":null,"code":"var _jsxFileName = \"/home/eva/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/chess-app/src/components/BoardComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CellComponent from './CellComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardComponent = ({\n  board,\n  setBoard,\n  currentPlayer,\n  swapPlayer\n}) => {\n  _s();\n  const [selectedCell, setSelectedCell] = useState(null);\n  function click(cell) {\n    var _selectedCell$figure;\n    if (selectedCell && selectedCell !== cell && (_selectedCell$figure = selectedCell.figure) !== null && _selectedCell$figure !== void 0 && _selectedCell$figure.canMove(cell)) {\n      selectedCell.moveFigure(cell);\n      swapPlayer();\n      setSelectedCell(null);\n      //updateBoard()\n    } else {\n      var _cell$figure;\n      if (((_cell$figure = cell.figure) === null || _cell$figure === void 0 ? void 0 : _cell$figure.color) === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color)) {\n        setSelectedCell(cell);\n      }\n    }\n  }\n  useEffect(() => {\n    highlightCells();\n  }, [selectedCell]);\n  function highlightCells() {\n    board.highlightCells(selectedCell);\n    updateBoard();\n  }\n  function updateBoard() {\n    const newBoard = board.getCopyBoard();\n    setBoard(newBoard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0435\\u0439 \\u0438\\u0433\\u0440\\u043E\\u043A \", currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n          click: click,\n          cell: cell,\n          selected: cell.x === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.x) && cell.y === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.y)\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardComponent, \"OFVjm5mk704+5WCzFQLJg89Ag6Q=\");\n_c = BoardComponent;\nexport default BoardComponent;\nvar _c;\n$RefreshReg$(_c, \"BoardComponent\");","map":{"version":3,"names":["React","useEffect","useState","CellComponent","jsxDEV","_jsxDEV","BoardComponent","board","setBoard","currentPlayer","swapPlayer","_s","selectedCell","setSelectedCell","click","cell","_selectedCell$figure","figure","canMove","moveFigure","_cell$figure","color","highlightCells","updateBoard","newBoard","getCopyBoard","children","fileName","_jsxFileName","lineNumber","columnNumber","className","cells","map","row","index","Fragment","selected","x","y","id","_c","$RefreshReg$"],"sources":["/home/eva/Рабочий стол/chess-app/src/components/BoardComponent.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport { Board } from '../models/Board';\nimport CellComponent from './CellComponent';\nimport { Cell } from '../models/Cell';\nimport { Player } from '../models/Player';\n\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n    currentPlayer: Player | null;\n    swapPlayer: () => void;\n}\n\n\n\nconst BoardComponent: FC<BoardProps> = ({board, setBoard, currentPlayer, swapPlayer}) => {\n    const [selectedCell, setSelectedCell] = useState<Cell | null>(null);\n\n    function click(cell: Cell) {\n        if (selectedCell && selectedCell !== cell && selectedCell.figure?.canMove(cell)) {\n            selectedCell.moveFigure(cell);\n            swapPlayer()\n            setSelectedCell(null);\n            //updateBoard()\n        }\n        else {\n            if(cell.figure?.color === currentPlayer?.color) {\n                setSelectedCell(cell);\n            }     \n        }\n    }\n\n    useEffect(() => {\n        highlightCells()\n    }, [selectedCell])\n\n    function highlightCells() {\n        board.highlightCells(selectedCell)\n        updateBoard()\n    }\n\n    function updateBoard() {\n        const newBoard = board.getCopyBoard()\n        setBoard(newBoard)\n    }\n\n  return (\n    <div>\n        <h3>Текущей игрок {currentPlayer?.color}</h3>\n        <div className=\"board\">\n            {board.cells.map((row, index) => \n                <React.Fragment key= {index}>\n                    {row.map(cell => \n                        <CellComponent\n                            click={click}\n                            cell={cell}\n                            key={cell.id}\n                            selected={cell.x === selectedCell?.x && cell.y === selectedCell?.y}\n                        />\n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    </div>\n    \n  );\n};\n\nexport default BoardComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}