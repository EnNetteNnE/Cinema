{"ast":null,"code":"import { Cell } from \"./Cell\";\nimport { Colors } from \"./Colors\";\nimport { King } from \"./figures/King\";\nimport { Pawn } from \"./figures/Pawn\";\nimport { Queen } from \"./figures/Queen\";\nexport class Board {\n  constructor() {\n    this.cells = [];\n  }\n  initCells() {\n    for (let i = 0; i < 8; i++) {\n      const row = [];\n      for (let j = 0; j < 8; j++) {\n        if ((i + j) % 2 !== 0) {\n          row.push(new Cell(this, j, i, Colors.BLACK, null)); // черные\n        } else {\n          row.push(new Cell(this, j, i, Colors.WHITE, null)); // белые\n        }\n      }\n      this.cells.push(row);\n    }\n  }\n  getCell(x, y) {\n    return this.cells[y][x];\n  }\n  addPawns() {\n    for (let i = 0; i < 8; i++) {\n      new Pawn(Colors.BLACK, this.getCell(i, 1));\n      new Pawn(Colors.WHITE, this.getCell(i, 6));\n    }\n  }\n  addKings() {\n    new King(Colors.BLACK, this.getCell(4, 1));\n    new King(Colors.WHITE, this.getCell(4, 6));\n  }\n  addBishop() {}\n  addKnight() {}\n  addQueen() {\n    new Queen(Colors.BLACK, this.getCell(3, 1));\n    new Queen(Colors.WHITE, this.getCell(3, 6));\n  }\n  addRook() {}\n  addFigures() {\n    this.addBishop();\n    this.addKings();\n    this.addKnight();\n    this.addPawns();\n    this.addRook();\n    this.addQueen();\n  }\n}","map":{"version":3,"names":["Cell","Colors","King","Pawn","Queen","Board","constructor","cells","initCells","i","row","j","push","BLACK","WHITE","getCell","x","y","addPawns","addKings","addBishop","addKnight","addQueen","addRook","addFigures"],"sources":["/home/eva/Рабочий стол/react/chess-app/src/models/Board.ts"],"sourcesContent":["import {Cell} from \"./Cell\";\nimport { Colors } from \"./Colors\";\nimport { King } from \"./figures/King\";\nimport { Pawn } from \"./figures/Pawn\";\nimport { Queen } from \"./figures/Queen\";\n\nexport class Board {\n    cells: Cell[][] = []\n\n\n    public initCells() {\n        for(let i = 0; i < 8; i++) {\n            const row: Cell[] = []\n            for (let j = 0; j < 8; j++) {\n                if ((i + j) % 2 !== 0) {\n                    row.push(new Cell(this, j, i, Colors.BLACK, null)) // черные\n                } else {\n                    row.push(new Cell(this, j, i, Colors.WHITE, null)) // белые\n                }\n            }\n            this.cells.push(row);\n        }\n    }\n\n    public getCell(x: number, y: number) {\n        return this.cells[y][x]\n    }\n\n    private addPawns() {\n        for (let i = 0; i < 8; i++) {\n            new Pawn(Colors.BLACK, this.getCell(i, 1))\n            new Pawn(Colors.WHITE, this.getCell(i, 6))\n        }\n    }\n\n    private addKings() {\n        new King(Colors.BLACK, this.getCell(4, 1))\n        new King(Colors.WHITE, this.getCell(4, 6))\n    }\n\n    private addBishop() {\n        \n    }\n\n    private addKnight() {\n        \n    }\n\n    private addQueen() {\n        new Queen(Colors.BLACK, this.getCell(3, 1))\n        new Queen(Colors.WHITE, this.getCell(3, 6))\n    }\n\n    private addRook() {\n        \n    }\n\n    public addFigures() {\n        this.addBishop()\n        this.addKings()\n        this.addKnight()\n        this.addPawns()\n        this.addRook()\n        this.addQueen()\n    }\n}"],"mappings":"AAAA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,MAAMC,KAAK,CAAC;EAAAC,YAAA;IAAA,KACfC,KAAK,GAAa,EAAE;EAAA;EAGbC,SAASA,CAAA,EAAG;IACf,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvB,MAAMC,GAAW,GAAG,EAAE;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACxB,IAAI,CAACF,CAAC,GAAGE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;UACnBD,GAAG,CAACE,IAAI,CAAC,IAAIZ,IAAI,CAAC,IAAI,EAAEW,CAAC,EAAEF,CAAC,EAAER,MAAM,CAACY,KAAK,EAAE,IAAI,CAAC,CAAC,EAAC;QACvD,CAAC,MAAM;UACHH,GAAG,CAACE,IAAI,CAAC,IAAIZ,IAAI,CAAC,IAAI,EAAEW,CAAC,EAAEF,CAAC,EAAER,MAAM,CAACa,KAAK,EAAE,IAAI,CAAC,CAAC,EAAC;QACvD;MACJ;MACA,IAAI,CAACP,KAAK,CAACK,IAAI,CAACF,GAAG,CAAC;IACxB;EACJ;EAEOK,OAAOA,CAACC,CAAS,EAAEC,CAAS,EAAE;IACjC,OAAO,IAAI,CAACV,KAAK,CAACU,CAAC,CAAC,CAACD,CAAC,CAAC;EAC3B;EAEQE,QAAQA,CAAA,EAAG;IACf,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxB,IAAIN,IAAI,CAACF,MAAM,CAACY,KAAK,EAAE,IAAI,CAACE,OAAO,CAACN,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1C,IAAIN,IAAI,CAACF,MAAM,CAACa,KAAK,EAAE,IAAI,CAACC,OAAO,CAACN,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C;EACJ;EAEQU,QAAQA,CAAA,EAAG;IACf,IAAIjB,IAAI,CAACD,MAAM,CAACY,KAAK,EAAE,IAAI,CAACE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,IAAIb,IAAI,CAACD,MAAM,CAACa,KAAK,EAAE,IAAI,CAACC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C;EAEQK,SAASA,CAAA,EAAG,CAEpB;EAEQC,SAASA,CAAA,EAAG,CAEpB;EAEQC,QAAQA,CAAA,EAAG;IACf,IAAIlB,KAAK,CAACH,MAAM,CAACY,KAAK,EAAE,IAAI,CAACE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,IAAIX,KAAK,CAACH,MAAM,CAACa,KAAK,EAAE,IAAI,CAACC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/C;EAEQQ,OAAOA,CAAA,EAAG,CAElB;EAEOC,UAAUA,CAAA,EAAG;IAChB,IAAI,CAACJ,SAAS,CAAC,CAAC;IAChB,IAAI,CAACD,QAAQ,CAAC,CAAC;IACf,IAAI,CAACE,SAAS,CAAC,CAAC;IAChB,IAAI,CAACH,QAAQ,CAAC,CAAC;IACf,IAAI,CAACK,OAAO,CAAC,CAAC;IACd,IAAI,CAACD,QAAQ,CAAC,CAAC;EACnB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}