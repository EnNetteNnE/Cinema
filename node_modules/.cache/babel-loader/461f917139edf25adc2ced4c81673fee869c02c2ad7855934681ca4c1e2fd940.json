{"ast":null,"code":"var _jsxFileName = \"/home/eva/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/reg/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport BoardComponent from './components/BoardComponent';\nimport { Board } from './models/Board';\nimport { Colors } from './models/Colors';\nimport { Player } from './models/Player';\nimport DebutsMake from './components/DebutsMake';\nimport DebutsPlay from './components/DebutsPlay';\nimport { Modes } from './models/Modes';\nimport { Mod } from './models/Mod';\nimport { sendPostUser, sendPostUserToken, sendGetTree } from './models/bek';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080';\nconst App = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginDirty, setLoginDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [loginError, setLoginError] = useState('Логин не может быть пустым');\n  const [passwordError, setPasswordError] = useState('Пароль не может быть пустым');\n  const [formValid, setFormValid] = useState(false);\n  const [userDirty, setUserDirty] = useState(false);\n  const [userError, setUserError] = useState('Пользователь с таким именем уже есть');\n  const [autDirty, setAutDirty] = useState(false);\n  const [autError, setAutError] = useState('Неверный логин или пароль');\n  const [trueUserDirty, setTrueUserDirty] = useState(false);\n  const [trueUserError, setTrueUserError] = useState('Пользователь успешно зарегистрирован');\n  const [token, setToken] = useState('0');\n  const [debuts, setDebuts] = useState([]);\n  useEffect(() => {\n    if (loginError || passwordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [loginError, passwordError]);\n  const loginHandler = e => {\n    setLogin(e.target.value);\n    if (e.target.value.length < 3 || e.target.value.length > 20) {\n      setLoginError('Логин должен быть от 3 до 20 символов');\n      if (!e.target.value) {\n        setLoginError('Логин не может быть пустым');\n      }\n    } else {\n      setLoginError('');\n    }\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    if (e.target.value.length < 3 || e.target.value.length > 8) {\n      setPasswordError('Пароль должен быть от 3 до 8 символов');\n      if (!e.target.value) {\n        setPasswordError('Пароль не может быть пустым');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n  const blurHeader = e => {\n    switch (e.target.name) {\n      case 'login':\n        setLoginDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n    }\n  };\n  const [user, setUser] = useState(false);\n  /*\n    async function registrations(): Promise<void> {\n      const HashPassword: string = password;\n  \n      try {\n          const id = await sendLoginRequest(login, HashPassword);\n          \n          // Проверка, является ли id единицей\n          if (id === 0) {\n            setUser(false);\n          } else {\n            setUser(true)\n          }\n      } catch (error) {\n          console.error('Error during login or ID check:', error);\n      }\n  }\n  \n  */\n  const registrations = () => {\n    // кнопочка регистрации\n    // тут если\n    const HashPassword = password;\n    const id = sendPostUser(login, HashPassword);\n    console.log('yyyyyy', id);\n    if (id === 0) {\n      setUserDirty(true);\n      setTrueUserDirty(false);\n      setAutDirty(false);\n    } else {\n      setTrueUserDirty(true);\n      setUserDirty(false);\n      setAutDirty(false);\n    }\n\n    //setUser(true)\n  };\n  const entrance = () => {\n    //кнопочка входа\n    const HashPassword = password;\n    const token = sendPostUserToken(login, HashPassword);\n    if (token === '0') {\n      setAutDirty(true);\n      setTrueUserDirty(false);\n      setUserDirty(false);\n    } else {\n      setToken(token);\n      console.log(token);\n      setUser(true);\n      setDebuts(sendGetTree(token));\n    }\n\n    //setUser(true)\n  };\n  const [mod, setMod] = useState(new Mod(Modes.NULL, null)); //состояние в котором сейчас игра\n  let boards = [];\n  let boards1 = [];\n  const [board, setBoard] = useState(new Board()); //[состояние, функция, которая будет изменять состояние] = хук, которым инициализируем состояние\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  useEffect(() => {\n    // чтобы метод вызывался при старте\n    restart();\n\n    //clickUp(mod);\n  });\n  function swapPlayer() {\n    setCurrentPlayer((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE ? blackPlayer : whitePlayer);\n  }\n  function restart() {\n    // начинаем новую партию игры\n    const newBoard = new Board();\n    //console.log(mod.mod)\n    if (token !== '0') {\n      //console.log(mod.mod)\n      newBoard.initCells(); //метод инициализации ячеек\n      newBoard.addFigures(); // раставить фигуры\n      setCurrentPlayer(whitePlayer);\n      //newBoard.Debuts = sendGetTree(token);\n      //newBoard.currentPlayer = Colors.WHITE\n      //newBoard.addDebuts()\n\n      let boardSTR = \"\";\n      boardSTR = newBoard.boardToString();\n      if ((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE) {\n        boardSTR += \"w\";\n      } else {\n        boardSTR += \"b\";\n      }\n      //console.log({boardSTR})\n      newBoard.BoardsStr.push(boardSTR);\n    }\n    setBoard(newBoard); // сохраняем новый объект в состоянии\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [loginDirty && loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        onChange: e => loginHandler(e),\n        value: login,\n        onBlur: e => blurHeader(e),\n        name: \"login\",\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        onChange: e => passwordHandler(e),\n        value: password,\n        onBlur: e => blurHeader(e),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt\",\n        onClick: () => registrations(),\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt\",\n        onClick: () => entrance(),\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), userDirty && userError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: userError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 38\n      }, this), autDirty && autError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: autError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 36\n      }, this), trueUserDirty && trueUserError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: trueUserError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(BoardComponent //сюда пропсы нада передать\n      // swapPlayer={swapPlayer}\n      , {\n        board: board,\n        setBoard: setBoard,\n        currentPlayer: currentPlayer,\n        swapPlayer: swapPlayer,\n        mod: mod,\n        boards: boards1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"debuts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Играть\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), board.Debuts.map(debut =>\n          /*#__PURE__*/\n          //{(mod.debut === debut) ? () : ()}\n          _jsxDEV(DebutsPlay, {\n            debut: debut,\n            restart: restart,\n            mod: mod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DebutsMake, {\n          title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0432\\u0430\\u0442\\u044C\",\n          board: board,\n          restart: restart,\n          mod: mod,\n          token: token,\n          debuts: debuts,\n          setDebuts: setDebuts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bXyMoSOq545MFPqobPciLuJLQg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BoardComponent","Board","Colors","Player","DebutsMake","DebutsPlay","Modes","Mod","sendPostUser","sendPostUserToken","sendGetTree","jsxDEV","_jsxDEV","API_URL","App","_s","login","setLogin","password","setPassword","loginDirty","setLoginDirty","passwordDirty","setPasswordDirty","loginError","setLoginError","passwordError","setPasswordError","formValid","setFormValid","userDirty","setUserDirty","userError","setUserError","autDirty","setAutDirty","autError","setAutError","trueUserDirty","setTrueUserDirty","trueUserError","setTrueUserError","token","setToken","debuts","setDebuts","loginHandler","e","target","value","length","passwordHandler","blurHeader","name","user","setUser","registrations","HashPassword","id","console","log","entrance","mod","setMod","NULL","boards","boards1","board","setBoard","whitePlayer","setWhitePlayer","WHITE","blackPlayer","setBlackPlayer","BLACK","currentPlayer","setCurrentPlayer","restart","swapPlayer","color","newBoard","initCells","addFigures","boardSTR","boardToString","BoardsStr","push","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","placeholder","onClick","disabled","Debuts","map","debut","title","_c","$RefreshReg$"],"sources":["/home/eva/Рабочий стол/reg/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport axios from 'axios';\nimport { useMutation } from 'react-query';\nimport BoardComponent from './components/BoardComponent';\nimport { Board } from './models/Board';\nimport { Colors } from './models/Colors';\nimport { Player } from './models/Player';\nimport DebutsMake from './components/DebutsMake';\nimport DebutsPlay from './components/DebutsPlay';\nimport { Modes } from './models/Modes';\nimport { Mod } from './models/Mod';\nimport { sendPostUser, sendPostUserToken, sendGetTree } from './models/bek';\n\nconst API_URL = 'http://localhost:8080'\n\n\n\nconst App = () => {\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginDirty, setLoginDirty] = useState(false)\n  const [passwordDirty, setPasswordDirty] = useState(false)\n  const [loginError, setLoginError] = useState('Логин не может быть пустым')\n  const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\n  const [formValid, setFormValid] = useState(false)\n\n  const [userDirty, setUserDirty] = useState(false)\n  const [userError, setUserError] = useState('Пользователь с таким именем уже есть')\n  const [autDirty, setAutDirty] = useState(false)\n  const [autError, setAutError] = useState('Неверный логин или пароль')\n  const [trueUserDirty, setTrueUserDirty] = useState(false)\n  const [trueUserError, setTrueUserError] = useState('Пользователь успешно зарегистрирован')\n\n  const [token, setToken] = useState('0')\n  const [debuts, setDebuts] = useState<{ id: number; name: string }[]>([])\n\n  useEffect(() => {\n    if (loginError || passwordError) {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }, [loginError, passwordError])\n\n  const loginHandler = (e: any) => {\n    setLogin(e.target.value)\n    if(e.target.value.length < 3 || e.target.value.length > 20) {\n      setLoginError('Логин должен быть от 3 до 20 символов')\n      if(!e.target.value) {\n        setLoginError('Логин не может быть пустым')\n      }\n    } else {\n      setLoginError('')\n    }\n  }\n\n  const passwordHandler = (e: any) => {\n    setPassword(e.target.value)\n    if (e.target.value.length < 3 || e.target.value.length > 8) {\n      setPasswordError('Пароль должен быть от 3 до 8 символов')\n      if(!e.target.value) {\n        setPasswordError('Пароль не может быть пустым')\n      }\n    } else {\n      setPasswordError('')\n    }\n  }\n  \n  const blurHeader = (e: any) => {\n    switch (e.target.name) {\n      case 'login':\n        setLoginDirty(true)\n        break\n      case 'password':\n        setPasswordDirty(true)\n        break\n    }\n  }\n\n  const [user, setUser] = useState(false)\n/*\n  async function registrations(): Promise<void> {\n    const HashPassword: string = password;\n\n    try {\n        const id = await sendLoginRequest(login, HashPassword);\n        \n        // Проверка, является ли id единицей\n        if (id === 0) {\n          setUser(false);\n        } else {\n          setUser(true)\n        }\n    } catch (error) {\n        console.error('Error during login or ID check:', error);\n    }\n}\n\n*/\nconst registrations = () => { // кнопочка регистрации\n    // тут если\n    const HashPassword: string = password;\n  \n    const id = sendPostUser(login, HashPassword);\n  \n\n    console.log('yyyyyy', id);\n\n    if (id === 0) {\n      setUserDirty(true);\n      setTrueUserDirty(false);\n      setAutDirty(false);\n    } else {\n      setTrueUserDirty(true);\n      setUserDirty(false);\n      setAutDirty(false);\n    }\n\n    //setUser(true)\n  }\n\n  const entrance = () => { //кнопочка входа\n    const HashPassword: string = password;\n\n    const token = sendPostUserToken(login, HashPassword);\n\n    if (token === '0') {\n      setAutDirty(true);\n      setTrueUserDirty(false);\n      setUserDirty(false);\n    } else {\n      setToken(token);\n      console.log(token);\n      setUser(true);\n      setDebuts(sendGetTree(token));\n    }\n\n    //setUser(true)\n  }\n\n\n\n\n\n\n  const [mod, setMod] = useState(new Mod(Modes.NULL, null)) //состояние в котором сейчас игра\n  let boards: Board[] = [];\n  let boards1: string[] = [];\n\n  const [board, setBoard] = useState(new Board())   //[состояние, функция, которая будет изменять состояние] = хук, которым инициализируем состояние\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE))\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK))\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n\n  \n\n  useEffect(() => { // чтобы метод вызывался при старте\n    restart()\n    \n    //clickUp(mod);\n  })\n\n  function swapPlayer() {\n    setCurrentPlayer((currentPlayer?.color === Colors.WHITE) ? blackPlayer : whitePlayer)\n  }\n\n  function restart() { // начинаем новую партию игры\n    const newBoard = new Board(); \n    //console.log(mod.mod)\n    if (token !== '0') {\n      //console.log(mod.mod)\n      newBoard.initCells() //метод инициализации ячеек\n      newBoard.addFigures() // раставить фигуры\n      setCurrentPlayer(whitePlayer);\n      //newBoard.Debuts = sendGetTree(token);\n    //newBoard.currentPlayer = Colors.WHITE\n    //newBoard.addDebuts()\n    \n    \n      let boardSTR: string = \"\";\n      boardSTR = newBoard.boardToString();\n      if(currentPlayer?.color === Colors.WHITE) {boardSTR += \"w\"}\n      else {boardSTR += \"b\"}\n    //console.log({boardSTR})\n      newBoard.BoardsStr.push(boardSTR)\n    }\n    setBoard(newBoard) // сохраняем новый объект в состоянии\n  }\n\n\n\n\n  \n\n  return (\n    <div className=\"game\">\n      {!user ? (\n        \n        <div className='form'>\n\n        {(loginDirty && loginError) && <div style={{color:'red'}}>{loginError}</div>}\n        <input className='input' onChange={e => loginHandler(e)} value={login} onBlur={e => blurHeader(e)} name='login' type=\"text\" placeholder=\"Введите логин...\"/>\n        \n        {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\n        <input className='input' onChange={e => passwordHandler(e)} value={password} onBlur={e => blurHeader(e)} name='password' type=\"password\" placeholder=\"Введите пароль...\"/>\n        <p></p>\n        <button className='bt' onClick={() => registrations()} disabled={!formValid} type='submit'>Регистрация</button>\n        \n        <button className='bt' onClick={() => entrance()} disabled={!formValid} type='submit'>Вход</button>\n\n        {(userDirty && userError) && <div style={{color:'red'}}>{userError}</div>}\n        {(autDirty && autError) && <div style={{color:'red'}}>{autError}</div>}\n        {(trueUserDirty && trueUserError) && <div style={{color:'green'}}>{trueUserError}</div>}\n      </div>\n\n      ) : (\n        <div className=\"app\">\n\n      <BoardComponent //сюда пропсы нада передать\n        // swapPlayer={swapPlayer}\n        board={board} \n        setBoard={setBoard}\n        currentPlayer={currentPlayer}\n        swapPlayer={swapPlayer}\n        mod={mod}\n        boards={boards1}\n      />\n\n      <p>\n            <p className = \"debuts\">\n                <h3>{\"Играть\"}</h3>\n                {board.Debuts.map(debut => \n                //{(mod.debut === debut) ? () : ()}\n                <DebutsPlay\n                debut={debut}   \n                restart={restart}\n                mod={mod}       \n              />\n                )}\n            </p>\n\n        <DebutsMake\n          title=\"Создавать\"\n          board={board}\n          restart={restart}\n          mod={mod}\n          token = {token}\n          debuts={debuts}\n          setDebuts={setDebuts}\n        />\n        \n      </p>\n\n    </div>\n\n      )}\n\n      \n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}