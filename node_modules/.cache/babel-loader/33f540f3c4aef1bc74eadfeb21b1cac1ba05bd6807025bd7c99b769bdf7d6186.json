{"ast":null,"code":"var _jsxFileName = \"/home/eva/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/chess-app/src/components/BoardComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CellComponent from './CellComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { click } from '@testing-library/user-event/dist/click';\nconst BoardComponent = ({\n  board,\n  setBoard\n}) => {\n  _s();\n  const [selectedCell, setSelectrdCell] = useState(null);\n  function click(cell) {\n    setSelectrdCell(cell);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n        click: click,\n        cell: cell,\n        selected: cell.x === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.x) && cell.y === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.y)\n      }, cell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardComponent, \"nymkgEHBY8eM7RxriudSCIBRRMc=\");\n_c = BoardComponent;\nexport default BoardComponent;\nvar _c;\n$RefreshReg$(_c, \"BoardComponent\");","map":{"version":3,"names":["React","useState","CellComponent","jsxDEV","_jsxDEV","click","BoardComponent","board","setBoard","_s","selectedCell","setSelectrdCell","cell","className","children","cells","map","row","index","Fragment","selected","x","y","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eva/Рабочий стол/chess-app/src/components/BoardComponent.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport { Board } from '../models/Board';\nimport CellComponent from './CellComponent';\nimport { Cell } from '../models/Cell';\nexport { click } from '@testing-library/user-event/dist/click';\n\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n}\n\n\n\nconst BoardComponent: FC<BoardProps> = ({board, setBoard}) => {\n    const [selectedCell, setSelectrdCell] = useState<Cell | null>(null);\n\n    function click(cell: Cell) {\n        setSelectrdCell(cell);\n    }\n\n  return (\n    <div className=\"board\">\n        {board.cells.map((row, index) => \n            <React.Fragment key= {index}>\n                {row.map(cell => \n                    <CellComponent\n                        click={click}\n                        cell={cell}\n                        key={cell.id}\n                        selected={cell.x === selectedCell?.x && cell.y === selectedCell?.y}\n                    />\n                )}\n            </React.Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default BoardComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAK,QAAQ,wCAAwC;AAU9D,MAAMC,cAA8B,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAc,IAAI,CAAC;EAEnE,SAASI,KAAKA,CAACO,IAAU,EAAE;IACvBD,eAAe,CAACC,IAAI,CAAC;EACzB;EAEF,oBACER,OAAA;IAAKS,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBP,KAAK,CAACQ,KAAK,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACxBd,OAAA,CAACJ,KAAK,CAACmB,QAAQ;MAAAL,QAAA,EACVG,GAAG,CAACD,GAAG,CAACJ,IAAI,iBACTR,OAAA,CAACF,aAAa;QACVG,KAAK,EAAEA,KAAM;QACbO,IAAI,EAAEA,IAAK;QAEXQ,QAAQ,EAAER,IAAI,CAACS,CAAC,MAAKX,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEW,CAAC,KAAIT,IAAI,CAACU,CAAC,MAAKZ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEY,CAAC;MAAC,GAD9DV,IAAI,CAACW,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC,GARiBT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASX,CACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvBIH,cAA8B;AAAAsB,EAAA,GAA9BtB,cAA8B;AAyBpC,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}