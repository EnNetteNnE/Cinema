{"ast":null,"code":"var _jsxFileName = \"/home/eva/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/reg/src/components/CellComponent.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CellComponent = ({\n  cell,\n  selected,\n  treehod,\n  click\n}) => {\n  var _cell$figure;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ['cell', cell.color, selected ? \"selected\" : cell.hodi ? \"blukaz\" : ''].join(' ') // чтобы 2 класса объеденить в одну строку\n      //если ячейка выбрана то селектид, или пустая строка\n      ,\n      onClick: () => click(cell) // слушатель событий, вызываем функцию клик, и передаем туда ячейку\n      //style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '#0ce0e0' : ''}}\n      ,\n      style: {\n        background: cell.available && cell.figure ? '#76cd76' : ''\n      },\n      children: [false && cell.hodi && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blukaz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }, this), cell.available && !cell.figure && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 46\n      }, this), ((_cell$figure = cell.figure) === null || _cell$figure === void 0 ? void 0 : _cell$figure.logo) && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cell.figure.logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)\n  // отрисовка классНейм аваэлибл только если нет фигуры\n  // если фигура на ячейке есть, то мы её отрисовываем\n  ;\n};\n\n//className={['cell', cell.color, treehod ? \"treehod\" : ''].join(' ')}\n//style={{border: cell.hodi ? '#0ce0e0' : ''}}\n//style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '4px #0ce0e0' : ''}}\n_c = CellComponent;\nexport default CellComponent;\nvar _c;\n$RefreshReg$(_c, \"CellComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CellComponent","cell","selected","treehod","click","_cell$figure","children","className","color","hodi","join","onClick","style","background","available","figure","fileName","_jsxFileName","lineNumber","columnNumber","logo","src","alt","_c","$RefreshReg$"],"sources":["/home/eva/Рабочий стол/reg/src/components/CellComponent.tsx"],"sourcesContent":["import React, {FC, ReactNode} from 'react';\nimport {Cell} from \"../models/Cell\";\nimport { click } from '@testing-library/user-event/dist/click';\n\ninterface CellProps {\n  cell: Cell;\n  selected: boolean; // флаг выбрана ячейка или нет\n  treehod: boolean;\n  click: (cell: Cell) => void; // ожидаем функцию\n  //children?: ReactNode;\n}\n\nconst CellComponent: FC<CellProps> = ({cell, selected, treehod, click}) => {\n  return (  \n    <div>\n      <div \n      className={['cell', cell.color, selected ? \"selected\" : cell.hodi ? \"blukaz\" : ''].join(' ')} // чтобы 2 класса объеденить в одну строку\n      //если ячейка выбрана то селектид, или пустая строка\n      onClick={() => click(cell)} // слушатель событий, вызываем функцию клик, и передаем туда ячейку\n      //style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '#0ce0e0' : ''}}\n      style={{background: (cell.available && cell.figure) ? '#76cd76' : ''}}\n      > \n        {false && cell.hodi && <div className={\"blukaz\"}/>}\n        {(cell.available && !cell.figure) && <div className={\"available\"}/>}\n        {cell.figure?.logo && <img src={cell.figure.logo} alt=\"\"/>} \n        {<div/>}\n      </div>\n    </div> \n    // отрисовка классНейм аваэлибл только если нет фигуры\n    // если фигура на ячейке есть, то мы её отрисовываем\n    \n  );\n};\n\n\n//className={['cell', cell.color, treehod ? \"treehod\" : ''].join(' ')}\n//style={{border: cell.hodi ? '#0ce0e0' : ''}}\n//style={{background: cell.available && cell.figure ? '#76cd76' : cell.hodi ? '4px #0ce0e0' : ''}}\n\nexport default CellComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAuB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY3C,MAAMC,aAA4B,GAAGA,CAAC;EAACC,IAAI;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EAAA,IAAAC,YAAA;EACzE,oBACEN,OAAA;IAAAO,QAAA,eACEP,OAAA;MACAQ,SAAS,EAAE,CAAC,MAAM,EAAEN,IAAI,CAACO,KAAK,EAAEN,QAAQ,GAAG,UAAU,GAAGD,IAAI,CAACQ,IAAI,GAAG,QAAQ,GAAG,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,CAAC;MAC9F;MAAA;MACAC,OAAO,EAAEA,CAAA,KAAMP,KAAK,CAACH,IAAI,CAAE,CAAC;MAC5B;MAAA;MACAW,KAAK,EAAE;QAACC,UAAU,EAAGZ,IAAI,CAACa,SAAS,IAAIb,IAAI,CAACc,MAAM,GAAI,SAAS,GAAG;MAAE,CAAE;MAAAT,QAAA,GAEnE,KAAK,IAAIL,IAAI,CAACQ,IAAI,iBAAIV,OAAA;QAAKQ,SAAS,EAAE;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAChDlB,IAAI,CAACa,SAAS,IAAI,CAACb,IAAI,CAACc,MAAM,iBAAKhB,OAAA;QAAKQ,SAAS,EAAE;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAClE,EAAAd,YAAA,GAAAJ,IAAI,CAACc,MAAM,cAAAV,YAAA,uBAAXA,YAAA,CAAae,IAAI,kBAAIrB,OAAA;QAAKsB,GAAG,EAAEpB,IAAI,CAACc,MAAM,CAACK,IAAK;QAACE,GAAG,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzDpB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;EACL;EACA;EAAA;AAGJ,CAAC;;AAGD;AACA;AACA;AAAAI,EAAA,GAzBMvB,aAA4B;AA2BlC,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}